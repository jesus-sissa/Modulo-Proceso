'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.3082
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<System.Data.Linq.Mapping.DatabaseAttribute(Name:="SIRC")>  _
Partial Public Class SircDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertPro_Servicios(instance As Pro_Servicios)
    End Sub
  Partial Private Sub UpdatePro_Servicios(instance As Pro_Servicios)
    End Sub
  Partial Private Sub DeletePro_Servicios(instance As Pro_Servicios)
    End Sub
  Partial Private Sub InsertCat_Remisiones(instance As Cat_Remisiones)
    End Sub
  Partial Private Sub UpdateCat_Remisiones(instance As Cat_Remisiones)
    End Sub
  Partial Private Sub DeleteCat_Remisiones(instance As Cat_Remisiones)
    End Sub
  Partial Private Sub InsertCat_ClientesProceso(instance As Cat_ClientesProceso)
    End Sub
  Partial Private Sub UpdateCat_ClientesProceso(instance As Cat_ClientesProceso)
    End Sub
  Partial Private Sub DeleteCat_ClientesProceso(instance As Cat_ClientesProceso)
    End Sub
  Partial Private Sub InsertPro_Cuentas(instance As Pro_Cuentas)
    End Sub
  Partial Private Sub UpdatePro_Cuentas(instance As Pro_Cuentas)
    End Sub
  Partial Private Sub DeletePro_Cuentas(instance As Pro_Cuentas)
    End Sub
  Partial Private Sub InsertPro_Archivos(instance As Pro_Archivos)
    End Sub
  Partial Private Sub UpdatePro_Archivos(instance As Pro_Archivos)
    End Sub
  Partial Private Sub DeletePro_Archivos(instance As Pro_Archivos)
    End Sub
  Partial Private Sub InsertPro_Fichas(instance As Pro_Fichas)
    End Sub
  Partial Private Sub UpdatePro_Fichas(instance As Pro_Fichas)
    End Sub
  Partial Private Sub DeletePro_Fichas(instance As Pro_Fichas)
    End Sub
  Partial Private Sub InsertCat_Monedas(instance As Cat_Monedas)
    End Sub
  Partial Private Sub UpdateCat_Monedas(instance As Cat_Monedas)
    End Sub
  Partial Private Sub DeleteCat_Monedas(instance As Cat_Monedas)
    End Sub
  Partial Private Sub InsertCat_Denominaciones(instance As Cat_Denominaciones)
    End Sub
  Partial Private Sub UpdateCat_Denominaciones(instance As Cat_Denominaciones)
    End Sub
  Partial Private Sub DeleteCat_Denominaciones(instance As Cat_Denominaciones)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.Modulo_Proceso.My.MySettings.Default.SIRCConnectionString1, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Pro_Servicios() As System.Data.Linq.Table(Of Pro_Servicios)
		Get
			Return Me.GetTable(Of Pro_Servicios)
		End Get
	End Property
	
	Public ReadOnly Property Cat_Remisiones() As System.Data.Linq.Table(Of Cat_Remisiones)
		Get
			Return Me.GetTable(Of Cat_Remisiones)
		End Get
	End Property
	
	Public ReadOnly Property Cat_ClientesProceso() As System.Data.Linq.Table(Of Cat_ClientesProceso)
		Get
			Return Me.GetTable(Of Cat_ClientesProceso)
		End Get
	End Property
	
	Public ReadOnly Property Pro_Cuentas() As System.Data.Linq.Table(Of Pro_Cuentas)
		Get
			Return Me.GetTable(Of Pro_Cuentas)
		End Get
	End Property
	
	Public ReadOnly Property Pro_Archivos() As System.Data.Linq.Table(Of Pro_Archivos)
		Get
			Return Me.GetTable(Of Pro_Archivos)
		End Get
	End Property
	
	Public ReadOnly Property Pro_Fichas() As System.Data.Linq.Table(Of Pro_Fichas)
		Get
			Return Me.GetTable(Of Pro_Fichas)
		End Get
	End Property
	
	Public ReadOnly Property Cat_Monedas() As System.Data.Linq.Table(Of Cat_Monedas)
		Get
			Return Me.GetTable(Of Cat_Monedas)
		End Get
	End Property
	
	Public ReadOnly Property Cat_Denominaciones() As System.Data.Linq.Table(Of Cat_Denominaciones)
		Get
			Return Me.GetTable(Of Cat_Denominaciones)
		End Get
	End Property
	
	<FunctionAttribute(Name:="dbo.CAT_RemisionesD_Create")>  _
	Public Function CAT_RemisionesD_Create(<Parameter(Name:="Id_Remision", DbType:="Decimal")> ByVal id_Remision As System.Nullable(Of Decimal), <Parameter(Name:="Id_Moneda", DbType:="Decimal")> ByVal id_Moneda As System.Nullable(Of Decimal), <Parameter(Name:="Importe_Efectivo", DbType:="Money")> ByVal importe_Efectivo As System.Nullable(Of Decimal), <Parameter(Name:="Importe_Documentos", DbType:="Money")> ByVal importe_Documentos As System.Nullable(Of Decimal)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), id_Remision, id_Moneda, importe_Efectivo, importe_Documentos)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<FunctionAttribute(Name:="dbo.CAT_Remisiones_Create")>  _
	Public Function CAT_Remisiones_Create(<Parameter(Name:="Id_Sucursal", DbType:="Decimal")> ByVal id_Sucursal As System.Nullable(Of Decimal), <Parameter(Name:="Numero_Remision", DbType:="Decimal")> ByVal numero_Remision As System.Nullable(Of Decimal), <Parameter(Name:="Envases", DbType:="Decimal")> ByVal envases As System.Nullable(Of Decimal), <Parameter(Name:="EnvasesSN", DbType:="Decimal")> ByVal envasesSN As System.Nullable(Of Decimal), <Parameter(Name:="Moneda_Local", DbType:="Decimal")> ByVal moneda_Local As System.Nullable(Of Decimal), <Parameter(Name:="Id_Cia", DbType:="Decimal")> ByVal id_Cia As System.Nullable(Of Decimal), <Parameter(Name:="Id_CiaProp", DbType:="Decimal")> ByVal id_CiaProp As System.Nullable(Of Decimal), <Parameter(Name:="Usuario", DbType:="Decimal")> ByVal usuario As System.Nullable(Of Decimal), <Parameter(Name:="ImporteTotal", DbType:="Money")> ByVal importeTotal As System.Nullable(Of Decimal), <Parameter(Name:="Morralla", DbType:="VarChar(1)")> ByVal morralla As System.Nullable(Of Char)) As ISingleResult(Of CAT_Remisiones_CreateResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), id_Sucursal, numero_Remision, envases, envasesSN, moneda_Local, id_Cia, id_CiaProp, usuario, importeTotal, morralla)
		Return CType(result.ReturnValue,ISingleResult(Of CAT_Remisiones_CreateResult))
	End Function
	
	<FunctionAttribute(Name:="dbo.CAT_Envases_Create")>  _
	Public Function CAT_Envases_Create(<Parameter(Name:="Id_Sucursal", DbType:="Decimal")> ByVal id_Sucursal As System.Nullable(Of Decimal), <Parameter(Name:="Id_Remision", DbType:="Decimal")> ByVal id_Remision As System.Nullable(Of Decimal), <Parameter(Name:="Id_TipoE", DbType:="Decimal")> ByVal id_TipoE As System.Nullable(Of Decimal), <Parameter(Name:="Numero", DbType:="VarChar(20)")> ByVal numero As String, <Parameter(Name:="Usuario_Registro", DbType:="Decimal")> ByVal usuario_Registro As System.Nullable(Of Decimal)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), id_Sucursal, id_Remision, id_TipoE, numero, usuario_Registro)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<FunctionAttribute(Name:="dbo.Pro_Saldo_Update")>  _
	Public Function Pro_Saldo_Update(<Parameter(Name:="Id_CajaBancaria", DbType:="Decimal")> ByVal id_CajaBancaria As System.Nullable(Of Decimal), <Parameter(Name:="ID_Denominacion", DbType:="Decimal")> ByVal iD_Denominacion As System.Nullable(Of Decimal), <Parameter(Name:="Cantidad", DbType:="Decimal")> ByVal cantidad As System.Nullable(Of Decimal), <Parameter(Name:="CantidadA", DbType:="Decimal")> ByVal cantidadA As System.Nullable(Of Decimal), <Parameter(Name:="CantidadB", DbType:="Decimal")> ByVal cantidadB As System.Nullable(Of Decimal), <Parameter(Name:="CantidadC", DbType:="Decimal")> ByVal cantidadC As System.Nullable(Of Decimal), <Parameter(Name:="CantidadD", DbType:="Decimal")> ByVal cantidadD As System.Nullable(Of Decimal), <Parameter(Name:="CantidadE", DbType:="Decimal")> ByVal cantidadE As System.Nullable(Of Decimal)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), id_CajaBancaria, iD_Denominacion, cantidad, cantidadA, cantidadB, cantidadC, cantidadD, cantidadE)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<FunctionAttribute(Name:="dbo.Pro_dotaciones_StatusValida")>  _
	Public Function Pro_dotaciones_StatusValida(<Parameter(Name:="Id_Dotacion", DbType:="Decimal")> ByVal id_Dotacion As System.Nullable(Of Decimal), <Parameter(Name:="Usuario_valida", DbType:="Decimal")> ByVal usuario_valida As System.Nullable(Of Decimal), <Parameter(Name:="ID_Remision", DbType:="Decimal")> ByVal iD_Remision As System.Nullable(Of Decimal), <Parameter(Name:="Cantidad_Envases", DbType:="Decimal")> ByVal cantidad_Envases As System.Nullable(Of Decimal)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), id_Dotacion, usuario_valida, iD_Remision, cantidad_Envases)
		Return CType(result.ReturnValue,Integer)
	End Function
End Class

<Table(Name:="dbo.Pro_Servicios")>  _
Partial Public Class Pro_Servicios
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id_Servicio As Decimal
	
	Private _Id_Sucursal As Decimal
	
	Private _Id_Sesion As Decimal
	
	Private _Id_ClienteP As Decimal
	
	Private _Id_CajaBancaria As Decimal
	
	Private _Id_Cia As Decimal
	
	Private _Id_Remision As Decimal
	
	Private _Fecha_Recibe As Date
	
	Private _Usuario_Recibe As Decimal
	
	Private _Corte_Turno As Decimal
	
	Private _Id_GrupoDepo As Decimal
	
	Private _Fecha_Asigna As System.Nullable(Of Date)
	
	Private _Usuario_Asigna As System.Nullable(Of Decimal)
	
	Private _Fecha_RecibeCajero As System.Nullable(Of Date)
	
	Private _Cajero As System.Nullable(Of Decimal)
	
	Private _Fecha_InicioV As System.Nullable(Of Date)
	
	Private _Fecha_FinV As System.Nullable(Of Date)
	
	Private _Fecha_Contabiliza As System.Nullable(Of Date)
	
	Private _Usuario_Contabiliza As System.Nullable(Of Decimal)
	
	Private _Id_Contabiliza As System.Nullable(Of Decimal)
	
	Private _Cantidad_Fichas As System.Nullable(Of Decimal)
	
	Private _Cantidad_FichasC As System.Nullable(Of Decimal)
	
	Private _Estacion_Recibe As String
	
	Private _Estacion_Asigna As String
	
	Private _Estacion_Verifica As String
	
	Private _Estacion_Contabiliza As String
	
	Private _Dpto_Procesa As Char
	
	Private _Status As String
	
	Private _Cat_Remisiones As EntitySet(Of Cat_Remisiones)
	
	Private _Cat_ClientesProceso As EntitySet(Of Cat_ClientesProceso)
	
	Private _Pro_Fichas As EntityRef(Of Pro_Fichas)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnId_ServicioChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_ServicioChanged()
    End Sub
    Partial Private Sub OnId_SucursalChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_SucursalChanged()
    End Sub
    Partial Private Sub OnId_SesionChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_SesionChanged()
    End Sub
    Partial Private Sub OnId_ClientePChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_ClientePChanged()
    End Sub
    Partial Private Sub OnId_CajaBancariaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_CajaBancariaChanged()
    End Sub
    Partial Private Sub OnId_CiaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_CiaChanged()
    End Sub
    Partial Private Sub OnId_RemisionChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_RemisionChanged()
    End Sub
    Partial Private Sub OnFecha_RecibeChanging(value As Date)
    End Sub
    Partial Private Sub OnFecha_RecibeChanged()
    End Sub
    Partial Private Sub OnUsuario_RecibeChanging(value As Decimal)
    End Sub
    Partial Private Sub OnUsuario_RecibeChanged()
    End Sub
    Partial Private Sub OnCorte_TurnoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCorte_TurnoChanged()
    End Sub
    Partial Private Sub OnId_GrupoDepoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_GrupoDepoChanged()
    End Sub
    Partial Private Sub OnFecha_AsignaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFecha_AsignaChanged()
    End Sub
    Partial Private Sub OnUsuario_AsignaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnUsuario_AsignaChanged()
    End Sub
    Partial Private Sub OnFecha_RecibeCajeroChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFecha_RecibeCajeroChanged()
    End Sub
    Partial Private Sub OnCajeroChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCajeroChanged()
    End Sub
    Partial Private Sub OnFecha_InicioVChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFecha_InicioVChanged()
    End Sub
    Partial Private Sub OnFecha_FinVChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFecha_FinVChanged()
    End Sub
    Partial Private Sub OnFecha_ContabilizaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFecha_ContabilizaChanged()
    End Sub
    Partial Private Sub OnUsuario_ContabilizaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnUsuario_ContabilizaChanged()
    End Sub
    Partial Private Sub OnId_ContabilizaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnId_ContabilizaChanged()
    End Sub
    Partial Private Sub OnCantidad_FichasChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCantidad_FichasChanged()
    End Sub
    Partial Private Sub OnCantidad_FichasCChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCantidad_FichasCChanged()
    End Sub
    Partial Private Sub OnEstacion_RecibeChanging(value As String)
    End Sub
    Partial Private Sub OnEstacion_RecibeChanged()
    End Sub
    Partial Private Sub OnEstacion_AsignaChanging(value As String)
    End Sub
    Partial Private Sub OnEstacion_AsignaChanged()
    End Sub
    Partial Private Sub OnEstacion_VerificaChanging(value As String)
    End Sub
    Partial Private Sub OnEstacion_VerificaChanged()
    End Sub
    Partial Private Sub OnEstacion_ContabilizaChanging(value As String)
    End Sub
    Partial Private Sub OnEstacion_ContabilizaChanged()
    End Sub
    Partial Private Sub OnDpto_ProcesaChanging(value As Char)
    End Sub
    Partial Private Sub OnDpto_ProcesaChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As String)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Cat_Remisiones = New EntitySet(Of Cat_Remisiones)(AddressOf Me.attach_Cat_Remisiones, AddressOf Me.detach_Cat_Remisiones)
		Me._Cat_ClientesProceso = New EntitySet(Of Cat_ClientesProceso)(AddressOf Me.attach_Cat_ClientesProceso, AddressOf Me.detach_Cat_ClientesProceso)
		Me._Pro_Fichas = CType(Nothing, EntityRef(Of Pro_Fichas))
		OnCreated
	End Sub
	
	<Column(Storage:="_Id_Servicio", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id_Servicio() As Decimal
		Get
			Return Me._Id_Servicio
		End Get
		Set
			If ((Me._Id_Servicio = value)  _
						= false) Then
				If Me._Pro_Fichas.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException
				End If
				Me.OnId_ServicioChanging(value)
				Me.SendPropertyChanging
				Me._Id_Servicio = value
				Me.SendPropertyChanged("Id_Servicio")
				Me.OnId_ServicioChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_Sucursal", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Id_Sucursal() As Decimal
		Get
			Return Me._Id_Sucursal
		End Get
		Set
			If ((Me._Id_Sucursal = value)  _
						= false) Then
				Me.OnId_SucursalChanging(value)
				Me.SendPropertyChanging
				Me._Id_Sucursal = value
				Me.SendPropertyChanged("Id_Sucursal")
				Me.OnId_SucursalChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_Sesion", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Id_Sesion() As Decimal
		Get
			Return Me._Id_Sesion
		End Get
		Set
			If ((Me._Id_Sesion = value)  _
						= false) Then
				Me.OnId_SesionChanging(value)
				Me.SendPropertyChanging
				Me._Id_Sesion = value
				Me.SendPropertyChanged("Id_Sesion")
				Me.OnId_SesionChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_ClienteP", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Id_ClienteP() As Decimal
		Get
			Return Me._Id_ClienteP
		End Get
		Set
			If ((Me._Id_ClienteP = value)  _
						= false) Then
				Me.OnId_ClientePChanging(value)
				Me.SendPropertyChanging
				Me._Id_ClienteP = value
				Me.SendPropertyChanged("Id_ClienteP")
				Me.OnId_ClientePChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_CajaBancaria", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Id_CajaBancaria() As Decimal
		Get
			Return Me._Id_CajaBancaria
		End Get
		Set
			If ((Me._Id_CajaBancaria = value)  _
						= false) Then
				Me.OnId_CajaBancariaChanging(value)
				Me.SendPropertyChanging
				Me._Id_CajaBancaria = value
				Me.SendPropertyChanged("Id_CajaBancaria")
				Me.OnId_CajaBancariaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_Cia", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Id_Cia() As Decimal
		Get
			Return Me._Id_Cia
		End Get
		Set
			If ((Me._Id_Cia = value)  _
						= false) Then
				Me.OnId_CiaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Cia = value
				Me.SendPropertyChanged("Id_Cia")
				Me.OnId_CiaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_Remision", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Id_Remision() As Decimal
		Get
			Return Me._Id_Remision
		End Get
		Set
			If ((Me._Id_Remision = value)  _
						= false) Then
				Me.OnId_RemisionChanging(value)
				Me.SendPropertyChanging
				Me._Id_Remision = value
				Me.SendPropertyChanged("Id_Remision")
				Me.OnId_RemisionChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Fecha_Recibe", DbType:="DateTime NOT NULL")>  _
	Public Property Fecha_Recibe() As Date
		Get
			Return Me._Fecha_Recibe
		End Get
		Set
			If ((Me._Fecha_Recibe = value)  _
						= false) Then
				Me.OnFecha_RecibeChanging(value)
				Me.SendPropertyChanging
				Me._Fecha_Recibe = value
				Me.SendPropertyChanged("Fecha_Recibe")
				Me.OnFecha_RecibeChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Usuario_Recibe", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Usuario_Recibe() As Decimal
		Get
			Return Me._Usuario_Recibe
		End Get
		Set
			If ((Me._Usuario_Recibe = value)  _
						= false) Then
				Me.OnUsuario_RecibeChanging(value)
				Me.SendPropertyChanging
				Me._Usuario_Recibe = value
				Me.SendPropertyChanged("Usuario_Recibe")
				Me.OnUsuario_RecibeChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Corte_Turno", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Corte_Turno() As Decimal
		Get
			Return Me._Corte_Turno
		End Get
		Set
			If ((Me._Corte_Turno = value)  _
						= false) Then
				Me.OnCorte_TurnoChanging(value)
				Me.SendPropertyChanging
				Me._Corte_Turno = value
				Me.SendPropertyChanged("Corte_Turno")
				Me.OnCorte_TurnoChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_GrupoDepo", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Id_GrupoDepo() As Decimal
		Get
			Return Me._Id_GrupoDepo
		End Get
		Set
			If ((Me._Id_GrupoDepo = value)  _
						= false) Then
				Me.OnId_GrupoDepoChanging(value)
				Me.SendPropertyChanging
				Me._Id_GrupoDepo = value
				Me.SendPropertyChanged("Id_GrupoDepo")
				Me.OnId_GrupoDepoChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Fecha_Asigna", DbType:="DateTime")>  _
	Public Property Fecha_Asigna() As System.Nullable(Of Date)
		Get
			Return Me._Fecha_Asigna
		End Get
		Set
			If (Me._Fecha_Asigna.Equals(value) = false) Then
				Me.OnFecha_AsignaChanging(value)
				Me.SendPropertyChanging
				Me._Fecha_Asigna = value
				Me.SendPropertyChanged("Fecha_Asigna")
				Me.OnFecha_AsignaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Usuario_Asigna", DbType:="Decimal(18,0)")>  _
	Public Property Usuario_Asigna() As System.Nullable(Of Decimal)
		Get
			Return Me._Usuario_Asigna
		End Get
		Set
			If (Me._Usuario_Asigna.Equals(value) = false) Then
				Me.OnUsuario_AsignaChanging(value)
				Me.SendPropertyChanging
				Me._Usuario_Asigna = value
				Me.SendPropertyChanged("Usuario_Asigna")
				Me.OnUsuario_AsignaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Fecha_RecibeCajero", DbType:="DateTime")>  _
	Public Property Fecha_RecibeCajero() As System.Nullable(Of Date)
		Get
			Return Me._Fecha_RecibeCajero
		End Get
		Set
			If (Me._Fecha_RecibeCajero.Equals(value) = false) Then
				Me.OnFecha_RecibeCajeroChanging(value)
				Me.SendPropertyChanging
				Me._Fecha_RecibeCajero = value
				Me.SendPropertyChanged("Fecha_RecibeCajero")
				Me.OnFecha_RecibeCajeroChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Cajero", DbType:="Decimal(18,0)")>  _
	Public Property Cajero() As System.Nullable(Of Decimal)
		Get
			Return Me._Cajero
		End Get
		Set
			If (Me._Cajero.Equals(value) = false) Then
				Me.OnCajeroChanging(value)
				Me.SendPropertyChanging
				Me._Cajero = value
				Me.SendPropertyChanged("Cajero")
				Me.OnCajeroChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Fecha_InicioV", DbType:="DateTime")>  _
	Public Property Fecha_InicioV() As System.Nullable(Of Date)
		Get
			Return Me._Fecha_InicioV
		End Get
		Set
			If (Me._Fecha_InicioV.Equals(value) = false) Then
				Me.OnFecha_InicioVChanging(value)
				Me.SendPropertyChanging
				Me._Fecha_InicioV = value
				Me.SendPropertyChanged("Fecha_InicioV")
				Me.OnFecha_InicioVChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Fecha_FinV", DbType:="DateTime")>  _
	Public Property Fecha_FinV() As System.Nullable(Of Date)
		Get
			Return Me._Fecha_FinV
		End Get
		Set
			If (Me._Fecha_FinV.Equals(value) = false) Then
				Me.OnFecha_FinVChanging(value)
				Me.SendPropertyChanging
				Me._Fecha_FinV = value
				Me.SendPropertyChanged("Fecha_FinV")
				Me.OnFecha_FinVChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Fecha_Contabiliza", DbType:="DateTime")>  _
	Public Property Fecha_Contabiliza() As System.Nullable(Of Date)
		Get
			Return Me._Fecha_Contabiliza
		End Get
		Set
			If (Me._Fecha_Contabiliza.Equals(value) = false) Then
				Me.OnFecha_ContabilizaChanging(value)
				Me.SendPropertyChanging
				Me._Fecha_Contabiliza = value
				Me.SendPropertyChanged("Fecha_Contabiliza")
				Me.OnFecha_ContabilizaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Usuario_Contabiliza", DbType:="Decimal(18,0)")>  _
	Public Property Usuario_Contabiliza() As System.Nullable(Of Decimal)
		Get
			Return Me._Usuario_Contabiliza
		End Get
		Set
			If (Me._Usuario_Contabiliza.Equals(value) = false) Then
				Me.OnUsuario_ContabilizaChanging(value)
				Me.SendPropertyChanging
				Me._Usuario_Contabiliza = value
				Me.SendPropertyChanged("Usuario_Contabiliza")
				Me.OnUsuario_ContabilizaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_Contabiliza", DbType:="Decimal(18,0)")>  _
	Public Property Id_Contabiliza() As System.Nullable(Of Decimal)
		Get
			Return Me._Id_Contabiliza
		End Get
		Set
			If (Me._Id_Contabiliza.Equals(value) = false) Then
				Me.OnId_ContabilizaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Contabiliza = value
				Me.SendPropertyChanged("Id_Contabiliza")
				Me.OnId_ContabilizaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Cantidad_Fichas", DbType:="Decimal(18,0)")>  _
	Public Property Cantidad_Fichas() As System.Nullable(Of Decimal)
		Get
			Return Me._Cantidad_Fichas
		End Get
		Set
			If (Me._Cantidad_Fichas.Equals(value) = false) Then
				Me.OnCantidad_FichasChanging(value)
				Me.SendPropertyChanging
				Me._Cantidad_Fichas = value
				Me.SendPropertyChanged("Cantidad_Fichas")
				Me.OnCantidad_FichasChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Cantidad_FichasC", DbType:="Decimal(18,0)")>  _
	Public Property Cantidad_FichasC() As System.Nullable(Of Decimal)
		Get
			Return Me._Cantidad_FichasC
		End Get
		Set
			If (Me._Cantidad_FichasC.Equals(value) = false) Then
				Me.OnCantidad_FichasCChanging(value)
				Me.SendPropertyChanging
				Me._Cantidad_FichasC = value
				Me.SendPropertyChanged("Cantidad_FichasC")
				Me.OnCantidad_FichasCChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Estacion_Recibe", DbType:="VarChar(50)")>  _
	Public Property Estacion_Recibe() As String
		Get
			Return Me._Estacion_Recibe
		End Get
		Set
			If (String.Equals(Me._Estacion_Recibe, value) = false) Then
				Me.OnEstacion_RecibeChanging(value)
				Me.SendPropertyChanging
				Me._Estacion_Recibe = value
				Me.SendPropertyChanged("Estacion_Recibe")
				Me.OnEstacion_RecibeChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Estacion_Asigna", DbType:="VarChar(50)")>  _
	Public Property Estacion_Asigna() As String
		Get
			Return Me._Estacion_Asigna
		End Get
		Set
			If (String.Equals(Me._Estacion_Asigna, value) = false) Then
				Me.OnEstacion_AsignaChanging(value)
				Me.SendPropertyChanging
				Me._Estacion_Asigna = value
				Me.SendPropertyChanged("Estacion_Asigna")
				Me.OnEstacion_AsignaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Estacion_Verifica", DbType:="VarChar(50)")>  _
	Public Property Estacion_Verifica() As String
		Get
			Return Me._Estacion_Verifica
		End Get
		Set
			If (String.Equals(Me._Estacion_Verifica, value) = false) Then
				Me.OnEstacion_VerificaChanging(value)
				Me.SendPropertyChanging
				Me._Estacion_Verifica = value
				Me.SendPropertyChanged("Estacion_Verifica")
				Me.OnEstacion_VerificaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Estacion_Contabiliza", DbType:="VarChar(50)")>  _
	Public Property Estacion_Contabiliza() As String
		Get
			Return Me._Estacion_Contabiliza
		End Get
		Set
			If (String.Equals(Me._Estacion_Contabiliza, value) = false) Then
				Me.OnEstacion_ContabilizaChanging(value)
				Me.SendPropertyChanging
				Me._Estacion_Contabiliza = value
				Me.SendPropertyChanged("Estacion_Contabiliza")
				Me.OnEstacion_ContabilizaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Dpto_Procesa", DbType:="VarChar(1) NOT NULL")>  _
	Public Property Dpto_Procesa() As Char
		Get
			Return Me._Dpto_Procesa
		End Get
		Set
			If ((Me._Dpto_Procesa = value)  _
						= false) Then
				Me.OnDpto_ProcesaChanging(value)
				Me.SendPropertyChanging
				Me._Dpto_Procesa = value
				Me.SendPropertyChanged("Dpto_Procesa")
				Me.OnDpto_ProcesaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Status", DbType:="VarChar(2) NOT NULL", CanBeNull:=false)>  _
	Public Property Status() As String
		Get
			Return Me._Status
		End Get
		Set
			If (String.Equals(Me._Status, value) = false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Association(Name:="Pro_Servicios_Cat_Remisiones", Storage:="_Cat_Remisiones", ThisKey:="Id_Remision", OtherKey:="Id_Remision")>  _
	Public Property Cat_Remisiones() As EntitySet(Of Cat_Remisiones)
		Get
			Return Me._Cat_Remisiones
		End Get
		Set
			Me._Cat_Remisiones.Assign(value)
		End Set
	End Property
	
	<Association(Name:="Pro_Servicios_Cat_ClientesProceso", Storage:="_Cat_ClientesProceso", ThisKey:="Id_ClienteP", OtherKey:="Id_ClienteP")>  _
	Public Property Cat_ClientesProceso() As EntitySet(Of Cat_ClientesProceso)
		Get
			Return Me._Cat_ClientesProceso
		End Get
		Set
			Me._Cat_ClientesProceso.Assign(value)
		End Set
	End Property
	
	<Association(Name:="Pro_Fichas_Pro_Servicios", Storage:="_Pro_Fichas", ThisKey:="Id_Servicio", OtherKey:="Id_Servicio", IsForeignKey:=true)>  _
	Public Property Pro_Fichas() As Pro_Fichas
		Get
			Return Me._Pro_Fichas.Entity
		End Get
		Set
			Dim previousValue As Pro_Fichas = Me._Pro_Fichas.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Pro_Fichas.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Pro_Fichas.Entity = Nothing
					previousValue.Pro_Servicios.Remove(Me)
				End If
				Me._Pro_Fichas.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Pro_Servicios.Add(Me)
					Me._Id_Servicio = value.Id_Servicio
				Else
					Me._Id_Servicio = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("Pro_Fichas")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Cat_Remisiones(ByVal entity As Cat_Remisiones)
		Me.SendPropertyChanging
		entity.Pro_Servicios = Me
	End Sub
	
	Private Sub detach_Cat_Remisiones(ByVal entity As Cat_Remisiones)
		Me.SendPropertyChanging
		entity.Pro_Servicios = Nothing
	End Sub
	
	Private Sub attach_Cat_ClientesProceso(ByVal entity As Cat_ClientesProceso)
		Me.SendPropertyChanging
		entity.Pro_Servicios = Me
	End Sub
	
	Private Sub detach_Cat_ClientesProceso(ByVal entity As Cat_ClientesProceso)
		Me.SendPropertyChanging
		entity.Pro_Servicios = Nothing
	End Sub
End Class

<Table(Name:="dbo.Cat_Remisiones")>  _
Partial Public Class Cat_Remisiones
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id_Remision As Decimal
	
	Private _Id_Sucursal As Decimal
	
	Private _Numero_Remision As Decimal
	
	Private _Envases As Decimal
	
	Private _EnvasesSN As Decimal
	
	Private _Morralla As Char
	
	Private _Moneda_Local As Decimal
	
	Private _Importe As Decimal
	
	Private _Id_Cia As Decimal
	
	Private _Id_CiaProp As System.Nullable(Of Decimal)
	
	Private _Fecha_Registro As Date
	
	Private _Usuario_Registro As Decimal
	
	Private _Modo_Captura As Decimal
	
	Private _Id_Movimiento As System.Nullable(Of Decimal)
	
	Private _Status As Char
	
	Private _Pro_Servicios As EntityRef(Of Pro_Servicios)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnId_RemisionChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_RemisionChanged()
    End Sub
    Partial Private Sub OnId_SucursalChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_SucursalChanged()
    End Sub
    Partial Private Sub OnNumero_RemisionChanging(value As Decimal)
    End Sub
    Partial Private Sub OnNumero_RemisionChanged()
    End Sub
    Partial Private Sub OnEnvasesChanging(value As Decimal)
    End Sub
    Partial Private Sub OnEnvasesChanged()
    End Sub
    Partial Private Sub OnEnvasesSNChanging(value As Decimal)
    End Sub
    Partial Private Sub OnEnvasesSNChanged()
    End Sub
    Partial Private Sub OnMorrallaChanging(value As Char)
    End Sub
    Partial Private Sub OnMorrallaChanged()
    End Sub
    Partial Private Sub OnMoneda_LocalChanging(value As Decimal)
    End Sub
    Partial Private Sub OnMoneda_LocalChanged()
    End Sub
    Partial Private Sub OnImporteChanging(value As Decimal)
    End Sub
    Partial Private Sub OnImporteChanged()
    End Sub
    Partial Private Sub OnId_CiaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_CiaChanged()
    End Sub
    Partial Private Sub OnId_CiaPropChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnId_CiaPropChanged()
    End Sub
    Partial Private Sub OnFecha_RegistroChanging(value As Date)
    End Sub
    Partial Private Sub OnFecha_RegistroChanged()
    End Sub
    Partial Private Sub OnUsuario_RegistroChanging(value As Decimal)
    End Sub
    Partial Private Sub OnUsuario_RegistroChanged()
    End Sub
    Partial Private Sub OnModo_CapturaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnModo_CapturaChanged()
    End Sub
    Partial Private Sub OnId_MovimientoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnId_MovimientoChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As Char)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Pro_Servicios = CType(Nothing, EntityRef(Of Pro_Servicios))
		OnCreated
	End Sub
	
	<Column(Storage:="_Id_Remision", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id_Remision() As Decimal
		Get
			Return Me._Id_Remision
		End Get
		Set
			If ((Me._Id_Remision = value)  _
						= false) Then
				If Me._Pro_Servicios.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException
				End If
				Me.OnId_RemisionChanging(value)
				Me.SendPropertyChanging
				Me._Id_Remision = value
				Me.SendPropertyChanged("Id_Remision")
				Me.OnId_RemisionChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_Sucursal", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Id_Sucursal() As Decimal
		Get
			Return Me._Id_Sucursal
		End Get
		Set
			If ((Me._Id_Sucursal = value)  _
						= false) Then
				Me.OnId_SucursalChanging(value)
				Me.SendPropertyChanging
				Me._Id_Sucursal = value
				Me.SendPropertyChanged("Id_Sucursal")
				Me.OnId_SucursalChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Numero_Remision", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Numero_Remision() As Decimal
		Get
			Return Me._Numero_Remision
		End Get
		Set
			If ((Me._Numero_Remision = value)  _
						= false) Then
				Me.OnNumero_RemisionChanging(value)
				Me.SendPropertyChanging
				Me._Numero_Remision = value
				Me.SendPropertyChanged("Numero_Remision")
				Me.OnNumero_RemisionChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Envases", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Envases() As Decimal
		Get
			Return Me._Envases
		End Get
		Set
			If ((Me._Envases = value)  _
						= false) Then
				Me.OnEnvasesChanging(value)
				Me.SendPropertyChanging
				Me._Envases = value
				Me.SendPropertyChanged("Envases")
				Me.OnEnvasesChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_EnvasesSN", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property EnvasesSN() As Decimal
		Get
			Return Me._EnvasesSN
		End Get
		Set
			If ((Me._EnvasesSN = value)  _
						= false) Then
				Me.OnEnvasesSNChanging(value)
				Me.SendPropertyChanging
				Me._EnvasesSN = value
				Me.SendPropertyChanged("EnvasesSN")
				Me.OnEnvasesSNChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Morralla", DbType:="VarChar(1) NOT NULL")>  _
	Public Property Morralla() As Char
		Get
			Return Me._Morralla
		End Get
		Set
			If ((Me._Morralla = value)  _
						= false) Then
				Me.OnMorrallaChanging(value)
				Me.SendPropertyChanging
				Me._Morralla = value
				Me.SendPropertyChanged("Morralla")
				Me.OnMorrallaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Moneda_Local", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Moneda_Local() As Decimal
		Get
			Return Me._Moneda_Local
		End Get
		Set
			If ((Me._Moneda_Local = value)  _
						= false) Then
				Me.OnMoneda_LocalChanging(value)
				Me.SendPropertyChanging
				Me._Moneda_Local = value
				Me.SendPropertyChanged("Moneda_Local")
				Me.OnMoneda_LocalChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Importe", DbType:="Money NOT NULL")>  _
	Public Property Importe() As Decimal
		Get
			Return Me._Importe
		End Get
		Set
			If ((Me._Importe = value)  _
						= false) Then
				Me.OnImporteChanging(value)
				Me.SendPropertyChanging
				Me._Importe = value
				Me.SendPropertyChanged("Importe")
				Me.OnImporteChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_Cia", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Id_Cia() As Decimal
		Get
			Return Me._Id_Cia
		End Get
		Set
			If ((Me._Id_Cia = value)  _
						= false) Then
				Me.OnId_CiaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Cia = value
				Me.SendPropertyChanged("Id_Cia")
				Me.OnId_CiaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_CiaProp", DbType:="Decimal(18,0)")>  _
	Public Property Id_CiaProp() As System.Nullable(Of Decimal)
		Get
			Return Me._Id_CiaProp
		End Get
		Set
			If (Me._Id_CiaProp.Equals(value) = false) Then
				Me.OnId_CiaPropChanging(value)
				Me.SendPropertyChanging
				Me._Id_CiaProp = value
				Me.SendPropertyChanged("Id_CiaProp")
				Me.OnId_CiaPropChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Fecha_Registro", DbType:="DateTime NOT NULL")>  _
	Public Property Fecha_Registro() As Date
		Get
			Return Me._Fecha_Registro
		End Get
		Set
			If ((Me._Fecha_Registro = value)  _
						= false) Then
				Me.OnFecha_RegistroChanging(value)
				Me.SendPropertyChanging
				Me._Fecha_Registro = value
				Me.SendPropertyChanged("Fecha_Registro")
				Me.OnFecha_RegistroChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Usuario_Registro", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Usuario_Registro() As Decimal
		Get
			Return Me._Usuario_Registro
		End Get
		Set
			If ((Me._Usuario_Registro = value)  _
						= false) Then
				Me.OnUsuario_RegistroChanging(value)
				Me.SendPropertyChanging
				Me._Usuario_Registro = value
				Me.SendPropertyChanged("Usuario_Registro")
				Me.OnUsuario_RegistroChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Modo_Captura", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Modo_Captura() As Decimal
		Get
			Return Me._Modo_Captura
		End Get
		Set
			If ((Me._Modo_Captura = value)  _
						= false) Then
				Me.OnModo_CapturaChanging(value)
				Me.SendPropertyChanging
				Me._Modo_Captura = value
				Me.SendPropertyChanged("Modo_Captura")
				Me.OnModo_CapturaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_Movimiento", DbType:="Decimal(18,0)")>  _
	Public Property Id_Movimiento() As System.Nullable(Of Decimal)
		Get
			Return Me._Id_Movimiento
		End Get
		Set
			If (Me._Id_Movimiento.Equals(value) = false) Then
				Me.OnId_MovimientoChanging(value)
				Me.SendPropertyChanging
				Me._Id_Movimiento = value
				Me.SendPropertyChanged("Id_Movimiento")
				Me.OnId_MovimientoChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Status", DbType:="VarChar(1) NOT NULL")>  _
	Public Property Status() As Char
		Get
			Return Me._Status
		End Get
		Set
			If ((Me._Status = value)  _
						= false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Association(Name:="Pro_Servicios_Cat_Remisiones", Storage:="_Pro_Servicios", ThisKey:="Id_Remision", OtherKey:="Id_Remision", IsForeignKey:=true)>  _
	Public Property Pro_Servicios() As Pro_Servicios
		Get
			Return Me._Pro_Servicios.Entity
		End Get
		Set
			Dim previousValue As Pro_Servicios = Me._Pro_Servicios.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Pro_Servicios.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Pro_Servicios.Entity = Nothing
					previousValue.Cat_Remisiones.Remove(Me)
				End If
				Me._Pro_Servicios.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Cat_Remisiones.Add(Me)
					Me._Id_Remision = value.Id_Remision
				Else
					Me._Id_Remision = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("Pro_Servicios")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Table(Name:="dbo.Cat_ClientesProceso")>  _
Partial Public Class Cat_ClientesProceso
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id_ClienteP As Decimal
	
	Private _Id_Sucursal As Decimal
	
	Private _Id_Cliente As System.Nullable(Of Decimal)
	
	Private _Clave_Cliente As String
	
	Private _Nombre_Comercial As String
	
	Private _Direccion_Comercial As String
	
	Private _Id_Ciudad As System.Nullable(Of Decimal)
	
	Private _Id_CajaBancaria As Decimal
	
	Private _Id_Cia As Decimal
	
	Private _Id_GrupoF As Decimal
	
	Private _Id_TipoDeposito As System.Nullable(Of Decimal)
	
	Private _Id_GrupoDepo As System.Nullable(Of Decimal)
	
	Private _Id_GrupoDota As System.Nullable(Of Decimal)
	
	Private _Numero_Contrato As String
	
	Private _Modo_Captura As Decimal
	
	Private _Requiere_Cuenta As Char
	
	Private _Adicional1 As String
	
	Private _Adicional2 As String
	
	Private _Adicional3 As String
	
	Private _Status As Char
	
	Private _Pro_Servicios As EntityRef(Of Pro_Servicios)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnId_ClientePChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_ClientePChanged()
    End Sub
    Partial Private Sub OnId_SucursalChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_SucursalChanged()
    End Sub
    Partial Private Sub OnId_ClienteChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnId_ClienteChanged()
    End Sub
    Partial Private Sub OnClave_ClienteChanging(value As String)
    End Sub
    Partial Private Sub OnClave_ClienteChanged()
    End Sub
    Partial Private Sub OnNombre_ComercialChanging(value As String)
    End Sub
    Partial Private Sub OnNombre_ComercialChanged()
    End Sub
    Partial Private Sub OnDireccion_ComercialChanging(value As String)
    End Sub
    Partial Private Sub OnDireccion_ComercialChanged()
    End Sub
    Partial Private Sub OnId_CiudadChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnId_CiudadChanged()
    End Sub
    Partial Private Sub OnId_CajaBancariaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_CajaBancariaChanged()
    End Sub
    Partial Private Sub OnId_CiaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_CiaChanged()
    End Sub
    Partial Private Sub OnId_GrupoFChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_GrupoFChanged()
    End Sub
    Partial Private Sub OnId_TipoDepositoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnId_TipoDepositoChanged()
    End Sub
    Partial Private Sub OnId_GrupoDepoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnId_GrupoDepoChanged()
    End Sub
    Partial Private Sub OnId_GrupoDotaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnId_GrupoDotaChanged()
    End Sub
    Partial Private Sub OnNumero_ContratoChanging(value As String)
    End Sub
    Partial Private Sub OnNumero_ContratoChanged()
    End Sub
    Partial Private Sub OnModo_CapturaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnModo_CapturaChanged()
    End Sub
    Partial Private Sub OnRequiere_CuentaChanging(value As Char)
    End Sub
    Partial Private Sub OnRequiere_CuentaChanged()
    End Sub
    Partial Private Sub OnAdicional1Changing(value As String)
    End Sub
    Partial Private Sub OnAdicional1Changed()
    End Sub
    Partial Private Sub OnAdicional2Changing(value As String)
    End Sub
    Partial Private Sub OnAdicional2Changed()
    End Sub
    Partial Private Sub OnAdicional3Changing(value As String)
    End Sub
    Partial Private Sub OnAdicional3Changed()
    End Sub
    Partial Private Sub OnStatusChanging(value As Char)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Pro_Servicios = CType(Nothing, EntityRef(Of Pro_Servicios))
		OnCreated
	End Sub
	
	<Column(Storage:="_Id_ClienteP", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id_ClienteP() As Decimal
		Get
			Return Me._Id_ClienteP
		End Get
		Set
			If ((Me._Id_ClienteP = value)  _
						= false) Then
				If Me._Pro_Servicios.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException
				End If
				Me.OnId_ClientePChanging(value)
				Me.SendPropertyChanging
				Me._Id_ClienteP = value
				Me.SendPropertyChanged("Id_ClienteP")
				Me.OnId_ClientePChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_Sucursal", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Id_Sucursal() As Decimal
		Get
			Return Me._Id_Sucursal
		End Get
		Set
			If ((Me._Id_Sucursal = value)  _
						= false) Then
				Me.OnId_SucursalChanging(value)
				Me.SendPropertyChanging
				Me._Id_Sucursal = value
				Me.SendPropertyChanged("Id_Sucursal")
				Me.OnId_SucursalChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_Cliente", DbType:="Decimal(18,0)")>  _
	Public Property Id_Cliente() As System.Nullable(Of Decimal)
		Get
			Return Me._Id_Cliente
		End Get
		Set
			If (Me._Id_Cliente.Equals(value) = false) Then
				Me.OnId_ClienteChanging(value)
				Me.SendPropertyChanging
				Me._Id_Cliente = value
				Me.SendPropertyChanged("Id_Cliente")
				Me.OnId_ClienteChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Clave_Cliente", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property Clave_Cliente() As String
		Get
			Return Me._Clave_Cliente
		End Get
		Set
			If (String.Equals(Me._Clave_Cliente, value) = false) Then
				Me.OnClave_ClienteChanging(value)
				Me.SendPropertyChanging
				Me._Clave_Cliente = value
				Me.SendPropertyChanged("Clave_Cliente")
				Me.OnClave_ClienteChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Nombre_Comercial", DbType:="VarChar(150) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre_Comercial() As String
		Get
			Return Me._Nombre_Comercial
		End Get
		Set
			If (String.Equals(Me._Nombre_Comercial, value) = false) Then
				Me.OnNombre_ComercialChanging(value)
				Me.SendPropertyChanging
				Me._Nombre_Comercial = value
				Me.SendPropertyChanged("Nombre_Comercial")
				Me.OnNombre_ComercialChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Direccion_Comercial", DbType:="VarChar(150)")>  _
	Public Property Direccion_Comercial() As String
		Get
			Return Me._Direccion_Comercial
		End Get
		Set
			If (String.Equals(Me._Direccion_Comercial, value) = false) Then
				Me.OnDireccion_ComercialChanging(value)
				Me.SendPropertyChanging
				Me._Direccion_Comercial = value
				Me.SendPropertyChanged("Direccion_Comercial")
				Me.OnDireccion_ComercialChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_Ciudad", DbType:="Decimal(18,0)")>  _
	Public Property Id_Ciudad() As System.Nullable(Of Decimal)
		Get
			Return Me._Id_Ciudad
		End Get
		Set
			If (Me._Id_Ciudad.Equals(value) = false) Then
				Me.OnId_CiudadChanging(value)
				Me.SendPropertyChanging
				Me._Id_Ciudad = value
				Me.SendPropertyChanged("Id_Ciudad")
				Me.OnId_CiudadChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_CajaBancaria", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Id_CajaBancaria() As Decimal
		Get
			Return Me._Id_CajaBancaria
		End Get
		Set
			If ((Me._Id_CajaBancaria = value)  _
						= false) Then
				Me.OnId_CajaBancariaChanging(value)
				Me.SendPropertyChanging
				Me._Id_CajaBancaria = value
				Me.SendPropertyChanged("Id_CajaBancaria")
				Me.OnId_CajaBancariaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_Cia", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Id_Cia() As Decimal
		Get
			Return Me._Id_Cia
		End Get
		Set
			If ((Me._Id_Cia = value)  _
						= false) Then
				Me.OnId_CiaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Cia = value
				Me.SendPropertyChanged("Id_Cia")
				Me.OnId_CiaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_GrupoF", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Id_GrupoF() As Decimal
		Get
			Return Me._Id_GrupoF
		End Get
		Set
			If ((Me._Id_GrupoF = value)  _
						= false) Then
				Me.OnId_GrupoFChanging(value)
				Me.SendPropertyChanging
				Me._Id_GrupoF = value
				Me.SendPropertyChanged("Id_GrupoF")
				Me.OnId_GrupoFChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_TipoDeposito", DbType:="Decimal(18,0)")>  _
	Public Property Id_TipoDeposito() As System.Nullable(Of Decimal)
		Get
			Return Me._Id_TipoDeposito
		End Get
		Set
			If (Me._Id_TipoDeposito.Equals(value) = false) Then
				Me.OnId_TipoDepositoChanging(value)
				Me.SendPropertyChanging
				Me._Id_TipoDeposito = value
				Me.SendPropertyChanged("Id_TipoDeposito")
				Me.OnId_TipoDepositoChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_GrupoDepo", DbType:="Decimal(18,0)")>  _
	Public Property Id_GrupoDepo() As System.Nullable(Of Decimal)
		Get
			Return Me._Id_GrupoDepo
		End Get
		Set
			If (Me._Id_GrupoDepo.Equals(value) = false) Then
				Me.OnId_GrupoDepoChanging(value)
				Me.SendPropertyChanging
				Me._Id_GrupoDepo = value
				Me.SendPropertyChanged("Id_GrupoDepo")
				Me.OnId_GrupoDepoChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_GrupoDota", DbType:="Decimal(18,0)")>  _
	Public Property Id_GrupoDota() As System.Nullable(Of Decimal)
		Get
			Return Me._Id_GrupoDota
		End Get
		Set
			If (Me._Id_GrupoDota.Equals(value) = false) Then
				Me.OnId_GrupoDotaChanging(value)
				Me.SendPropertyChanging
				Me._Id_GrupoDota = value
				Me.SendPropertyChanged("Id_GrupoDota")
				Me.OnId_GrupoDotaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Numero_Contrato", DbType:="VarChar(50)")>  _
	Public Property Numero_Contrato() As String
		Get
			Return Me._Numero_Contrato
		End Get
		Set
			If (String.Equals(Me._Numero_Contrato, value) = false) Then
				Me.OnNumero_ContratoChanging(value)
				Me.SendPropertyChanging
				Me._Numero_Contrato = value
				Me.SendPropertyChanged("Numero_Contrato")
				Me.OnNumero_ContratoChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Modo_Captura", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Modo_Captura() As Decimal
		Get
			Return Me._Modo_Captura
		End Get
		Set
			If ((Me._Modo_Captura = value)  _
						= false) Then
				Me.OnModo_CapturaChanging(value)
				Me.SendPropertyChanging
				Me._Modo_Captura = value
				Me.SendPropertyChanged("Modo_Captura")
				Me.OnModo_CapturaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Requiere_Cuenta", DbType:="VarChar(1) NOT NULL")>  _
	Public Property Requiere_Cuenta() As Char
		Get
			Return Me._Requiere_Cuenta
		End Get
		Set
			If ((Me._Requiere_Cuenta = value)  _
						= false) Then
				Me.OnRequiere_CuentaChanging(value)
				Me.SendPropertyChanging
				Me._Requiere_Cuenta = value
				Me.SendPropertyChanged("Requiere_Cuenta")
				Me.OnRequiere_CuentaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Adicional1", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Adicional1() As String
		Get
			Return Me._Adicional1
		End Get
		Set
			If (String.Equals(Me._Adicional1, value) = false) Then
				Me.OnAdicional1Changing(value)
				Me.SendPropertyChanging
				Me._Adicional1 = value
				Me.SendPropertyChanged("Adicional1")
				Me.OnAdicional1Changed
			End If
		End Set
	End Property
	
	<Column(Storage:="_Adicional2", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Adicional2() As String
		Get
			Return Me._Adicional2
		End Get
		Set
			If (String.Equals(Me._Adicional2, value) = false) Then
				Me.OnAdicional2Changing(value)
				Me.SendPropertyChanging
				Me._Adicional2 = value
				Me.SendPropertyChanged("Adicional2")
				Me.OnAdicional2Changed
			End If
		End Set
	End Property
	
	<Column(Storage:="_Adicional3", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Adicional3() As String
		Get
			Return Me._Adicional3
		End Get
		Set
			If (String.Equals(Me._Adicional3, value) = false) Then
				Me.OnAdicional3Changing(value)
				Me.SendPropertyChanging
				Me._Adicional3 = value
				Me.SendPropertyChanged("Adicional3")
				Me.OnAdicional3Changed
			End If
		End Set
	End Property
	
	<Column(Storage:="_Status", DbType:="VarChar(1) NOT NULL")>  _
	Public Property Status() As Char
		Get
			Return Me._Status
		End Get
		Set
			If ((Me._Status = value)  _
						= false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Association(Name:="Pro_Servicios_Cat_ClientesProceso", Storage:="_Pro_Servicios", ThisKey:="Id_ClienteP", OtherKey:="Id_ClienteP", IsForeignKey:=true)>  _
	Public Property Pro_Servicios() As Pro_Servicios
		Get
			Return Me._Pro_Servicios.Entity
		End Get
		Set
			Dim previousValue As Pro_Servicios = Me._Pro_Servicios.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Pro_Servicios.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Pro_Servicios.Entity = Nothing
					previousValue.Cat_ClientesProceso.Remove(Me)
				End If
				Me._Pro_Servicios.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Cat_ClientesProceso.Add(Me)
					Me._Id_ClienteP = value.Id_ClienteP
				Else
					Me._Id_ClienteP = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("Pro_Servicios")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Table(Name:="dbo.Pro_Cuentas")>  _
Partial Public Class Pro_Cuentas
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id_Cuenta As Decimal
	
	Private _Id_CajaBancaria As Decimal
	
	Private _Numero_Cuenta As String
	
	Private _Id_Moneda As Decimal
	
	Private _Id_Ciudad As Decimal
	
	Private _Modo_Captura As Decimal
	
	Private _Referenciada As Char
	
	Private _Referencia_Fija As Char
	
	Private _Status As Char
	
	Private _Pro_Fichas As EntityRef(Of Pro_Fichas)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnId_CuentaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_CuentaChanged()
    End Sub
    Partial Private Sub OnId_CajaBancariaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_CajaBancariaChanged()
    End Sub
    Partial Private Sub OnNumero_CuentaChanging(value As String)
    End Sub
    Partial Private Sub OnNumero_CuentaChanged()
    End Sub
    Partial Private Sub OnId_MonedaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_MonedaChanged()
    End Sub
    Partial Private Sub OnId_CiudadChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_CiudadChanged()
    End Sub
    Partial Private Sub OnModo_CapturaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnModo_CapturaChanged()
    End Sub
    Partial Private Sub OnReferenciadaChanging(value As Char)
    End Sub
    Partial Private Sub OnReferenciadaChanged()
    End Sub
    Partial Private Sub OnReferencia_FijaChanging(value As Char)
    End Sub
    Partial Private Sub OnReferencia_FijaChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As Char)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Pro_Fichas = CType(Nothing, EntityRef(Of Pro_Fichas))
		OnCreated
	End Sub
	
	<Column(Storage:="_Id_Cuenta", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id_Cuenta() As Decimal
		Get
			Return Me._Id_Cuenta
		End Get
		Set
			If ((Me._Id_Cuenta = value)  _
						= false) Then
				If Me._Pro_Fichas.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException
				End If
				Me.OnId_CuentaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Cuenta = value
				Me.SendPropertyChanged("Id_Cuenta")
				Me.OnId_CuentaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_CajaBancaria", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Id_CajaBancaria() As Decimal
		Get
			Return Me._Id_CajaBancaria
		End Get
		Set
			If ((Me._Id_CajaBancaria = value)  _
						= false) Then
				Me.OnId_CajaBancariaChanging(value)
				Me.SendPropertyChanging
				Me._Id_CajaBancaria = value
				Me.SendPropertyChanged("Id_CajaBancaria")
				Me.OnId_CajaBancariaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Numero_Cuenta", DbType:="VarChar(15) NOT NULL", CanBeNull:=false)>  _
	Public Property Numero_Cuenta() As String
		Get
			Return Me._Numero_Cuenta
		End Get
		Set
			If (String.Equals(Me._Numero_Cuenta, value) = false) Then
				Me.OnNumero_CuentaChanging(value)
				Me.SendPropertyChanging
				Me._Numero_Cuenta = value
				Me.SendPropertyChanged("Numero_Cuenta")
				Me.OnNumero_CuentaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_Moneda", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Id_Moneda() As Decimal
		Get
			Return Me._Id_Moneda
		End Get
		Set
			If ((Me._Id_Moneda = value)  _
						= false) Then
				Me.OnId_MonedaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Moneda = value
				Me.SendPropertyChanged("Id_Moneda")
				Me.OnId_MonedaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_Ciudad", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Id_Ciudad() As Decimal
		Get
			Return Me._Id_Ciudad
		End Get
		Set
			If ((Me._Id_Ciudad = value)  _
						= false) Then
				Me.OnId_CiudadChanging(value)
				Me.SendPropertyChanging
				Me._Id_Ciudad = value
				Me.SendPropertyChanged("Id_Ciudad")
				Me.OnId_CiudadChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Modo_Captura", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Modo_Captura() As Decimal
		Get
			Return Me._Modo_Captura
		End Get
		Set
			If ((Me._Modo_Captura = value)  _
						= false) Then
				Me.OnModo_CapturaChanging(value)
				Me.SendPropertyChanging
				Me._Modo_Captura = value
				Me.SendPropertyChanged("Modo_Captura")
				Me.OnModo_CapturaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Referenciada", DbType:="VarChar(1) NOT NULL")>  _
	Public Property Referenciada() As Char
		Get
			Return Me._Referenciada
		End Get
		Set
			If ((Me._Referenciada = value)  _
						= false) Then
				Me.OnReferenciadaChanging(value)
				Me.SendPropertyChanging
				Me._Referenciada = value
				Me.SendPropertyChanged("Referenciada")
				Me.OnReferenciadaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Referencia_Fija", DbType:="VarChar(1) NOT NULL")>  _
	Public Property Referencia_Fija() As Char
		Get
			Return Me._Referencia_Fija
		End Get
		Set
			If ((Me._Referencia_Fija = value)  _
						= false) Then
				Me.OnReferencia_FijaChanging(value)
				Me.SendPropertyChanging
				Me._Referencia_Fija = value
				Me.SendPropertyChanged("Referencia_Fija")
				Me.OnReferencia_FijaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Status", DbType:="VarChar(1) NOT NULL")>  _
	Public Property Status() As Char
		Get
			Return Me._Status
		End Get
		Set
			If ((Me._Status = value)  _
						= false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Association(Name:="Pro_Fichas_Pro_Cuentas", Storage:="_Pro_Fichas", ThisKey:="Id_Cuenta", OtherKey:="Id_Cuenta", IsForeignKey:=true)>  _
	Public Property Pro_Fichas() As Pro_Fichas
		Get
			Return Me._Pro_Fichas.Entity
		End Get
		Set
			Dim previousValue As Pro_Fichas = Me._Pro_Fichas.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Pro_Fichas.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Pro_Fichas.Entity = Nothing
					previousValue.Pro_Cuentas.Remove(Me)
				End If
				Me._Pro_Fichas.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Pro_Cuentas.Add(Me)
					Me._Id_Cuenta = value.Id_Cuenta
				Else
					Me._Id_Cuenta = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("Pro_Fichas")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Table(Name:="dbo.Pro_Archivos")>  _
Partial Public Class Pro_Archivos
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id_Archivo As Decimal
	
	Private _Num_Proceso As Decimal
	
	Private _Numero_Archivo As Decimal
	
	Private _Nombre_Archivo As String
	
	Private _Fecha_Genera As Date
	
	Private _Fecha_Aplicacion As Date
	
	Private _Usuario_Genera As Decimal
	
	Private _Fecha_Cancela As System.Nullable(Of Date)
	
	Private _Usuario_Cancela As System.Nullable(Of Decimal)
	
	Private _Id_Sesion As Decimal
	
	Private _Id_Cia As Decimal
	
	Private _Id_CajaBancaria As Decimal
	
	Private _Id_Moneda As Decimal
	
	Private _Id_Cajero As Decimal
	
	Private _Id_GrupoDepo As Decimal
	
	Private _Corte_Turno As Decimal
	
	Private _Estacion_Genera As String
	
	Private _Estacion_Cancela As String
	
	Private _Id_SesionGenera As Decimal
	
	Private _Id_SesionCancela As System.Nullable(Of Decimal)
	
	Private _Status As Char
	
	Private _Id_Sucursal As Decimal
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnId_ArchivoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_ArchivoChanged()
    End Sub
    Partial Private Sub OnNum_ProcesoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnNum_ProcesoChanged()
    End Sub
    Partial Private Sub OnNumero_ArchivoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnNumero_ArchivoChanged()
    End Sub
    Partial Private Sub OnNombre_ArchivoChanging(value As String)
    End Sub
    Partial Private Sub OnNombre_ArchivoChanged()
    End Sub
    Partial Private Sub OnFecha_GeneraChanging(value As Date)
    End Sub
    Partial Private Sub OnFecha_GeneraChanged()
    End Sub
    Partial Private Sub OnFecha_AplicacionChanging(value As Date)
    End Sub
    Partial Private Sub OnFecha_AplicacionChanged()
    End Sub
    Partial Private Sub OnUsuario_GeneraChanging(value As Decimal)
    End Sub
    Partial Private Sub OnUsuario_GeneraChanged()
    End Sub
    Partial Private Sub OnFecha_CancelaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFecha_CancelaChanged()
    End Sub
    Partial Private Sub OnUsuario_CancelaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnUsuario_CancelaChanged()
    End Sub
    Partial Private Sub OnId_SesionChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_SesionChanged()
    End Sub
    Partial Private Sub OnId_CiaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_CiaChanged()
    End Sub
    Partial Private Sub OnId_CajaBancariaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_CajaBancariaChanged()
    End Sub
    Partial Private Sub OnId_MonedaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_MonedaChanged()
    End Sub
    Partial Private Sub OnId_CajeroChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_CajeroChanged()
    End Sub
    Partial Private Sub OnId_GrupoDepoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_GrupoDepoChanged()
    End Sub
    Partial Private Sub OnCorte_TurnoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCorte_TurnoChanged()
    End Sub
    Partial Private Sub OnEstacion_GeneraChanging(value As String)
    End Sub
    Partial Private Sub OnEstacion_GeneraChanged()
    End Sub
    Partial Private Sub OnEstacion_CancelaChanging(value As String)
    End Sub
    Partial Private Sub OnEstacion_CancelaChanged()
    End Sub
    Partial Private Sub OnId_SesionGeneraChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_SesionGeneraChanged()
    End Sub
    Partial Private Sub OnId_SesionCancelaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnId_SesionCancelaChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As Char)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnId_SucursalChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_SucursalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Column(Storage:="_Id_Archivo", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id_Archivo() As Decimal
		Get
			Return Me._Id_Archivo
		End Get
		Set
			If ((Me._Id_Archivo = value)  _
						= false) Then
				Me.OnId_ArchivoChanging(value)
				Me.SendPropertyChanging
				Me._Id_Archivo = value
				Me.SendPropertyChanged("Id_Archivo")
				Me.OnId_ArchivoChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Num_Proceso", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Num_Proceso() As Decimal
		Get
			Return Me._Num_Proceso
		End Get
		Set
			If ((Me._Num_Proceso = value)  _
						= false) Then
				Me.OnNum_ProcesoChanging(value)
				Me.SendPropertyChanging
				Me._Num_Proceso = value
				Me.SendPropertyChanged("Num_Proceso")
				Me.OnNum_ProcesoChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Numero_Archivo", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Numero_Archivo() As Decimal
		Get
			Return Me._Numero_Archivo
		End Get
		Set
			If ((Me._Numero_Archivo = value)  _
						= false) Then
				Me.OnNumero_ArchivoChanging(value)
				Me.SendPropertyChanging
				Me._Numero_Archivo = value
				Me.SendPropertyChanged("Numero_Archivo")
				Me.OnNumero_ArchivoChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Nombre_Archivo", DbType:="VarChar(150) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre_Archivo() As String
		Get
			Return Me._Nombre_Archivo
		End Get
		Set
			If (String.Equals(Me._Nombre_Archivo, value) = false) Then
				Me.OnNombre_ArchivoChanging(value)
				Me.SendPropertyChanging
				Me._Nombre_Archivo = value
				Me.SendPropertyChanged("Nombre_Archivo")
				Me.OnNombre_ArchivoChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Fecha_Genera", DbType:="DateTime NOT NULL")>  _
	Public Property Fecha_Genera() As Date
		Get
			Return Me._Fecha_Genera
		End Get
		Set
			If ((Me._Fecha_Genera = value)  _
						= false) Then
				Me.OnFecha_GeneraChanging(value)
				Me.SendPropertyChanging
				Me._Fecha_Genera = value
				Me.SendPropertyChanged("Fecha_Genera")
				Me.OnFecha_GeneraChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Fecha_Aplicacion", DbType:="Date NOT NULL")>  _
	Public Property Fecha_Aplicacion() As Date
		Get
			Return Me._Fecha_Aplicacion
		End Get
		Set
			If ((Me._Fecha_Aplicacion = value)  _
						= false) Then
				Me.OnFecha_AplicacionChanging(value)
				Me.SendPropertyChanging
				Me._Fecha_Aplicacion = value
				Me.SendPropertyChanged("Fecha_Aplicacion")
				Me.OnFecha_AplicacionChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Usuario_Genera", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Usuario_Genera() As Decimal
		Get
			Return Me._Usuario_Genera
		End Get
		Set
			If ((Me._Usuario_Genera = value)  _
						= false) Then
				Me.OnUsuario_GeneraChanging(value)
				Me.SendPropertyChanging
				Me._Usuario_Genera = value
				Me.SendPropertyChanged("Usuario_Genera")
				Me.OnUsuario_GeneraChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Fecha_Cancela", DbType:="DateTime")>  _
	Public Property Fecha_Cancela() As System.Nullable(Of Date)
		Get
			Return Me._Fecha_Cancela
		End Get
		Set
			If (Me._Fecha_Cancela.Equals(value) = false) Then
				Me.OnFecha_CancelaChanging(value)
				Me.SendPropertyChanging
				Me._Fecha_Cancela = value
				Me.SendPropertyChanged("Fecha_Cancela")
				Me.OnFecha_CancelaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Usuario_Cancela", DbType:="Decimal(18,0)")>  _
	Public Property Usuario_Cancela() As System.Nullable(Of Decimal)
		Get
			Return Me._Usuario_Cancela
		End Get
		Set
			If (Me._Usuario_Cancela.Equals(value) = false) Then
				Me.OnUsuario_CancelaChanging(value)
				Me.SendPropertyChanging
				Me._Usuario_Cancela = value
				Me.SendPropertyChanged("Usuario_Cancela")
				Me.OnUsuario_CancelaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_Sesion", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Id_Sesion() As Decimal
		Get
			Return Me._Id_Sesion
		End Get
		Set
			If ((Me._Id_Sesion = value)  _
						= false) Then
				Me.OnId_SesionChanging(value)
				Me.SendPropertyChanging
				Me._Id_Sesion = value
				Me.SendPropertyChanged("Id_Sesion")
				Me.OnId_SesionChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_Cia", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Id_Cia() As Decimal
		Get
			Return Me._Id_Cia
		End Get
		Set
			If ((Me._Id_Cia = value)  _
						= false) Then
				Me.OnId_CiaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Cia = value
				Me.SendPropertyChanged("Id_Cia")
				Me.OnId_CiaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_CajaBancaria", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Id_CajaBancaria() As Decimal
		Get
			Return Me._Id_CajaBancaria
		End Get
		Set
			If ((Me._Id_CajaBancaria = value)  _
						= false) Then
				Me.OnId_CajaBancariaChanging(value)
				Me.SendPropertyChanging
				Me._Id_CajaBancaria = value
				Me.SendPropertyChanged("Id_CajaBancaria")
				Me.OnId_CajaBancariaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_Moneda", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Id_Moneda() As Decimal
		Get
			Return Me._Id_Moneda
		End Get
		Set
			If ((Me._Id_Moneda = value)  _
						= false) Then
				Me.OnId_MonedaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Moneda = value
				Me.SendPropertyChanged("Id_Moneda")
				Me.OnId_MonedaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_Cajero", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Id_Cajero() As Decimal
		Get
			Return Me._Id_Cajero
		End Get
		Set
			If ((Me._Id_Cajero = value)  _
						= false) Then
				Me.OnId_CajeroChanging(value)
				Me.SendPropertyChanging
				Me._Id_Cajero = value
				Me.SendPropertyChanged("Id_Cajero")
				Me.OnId_CajeroChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_GrupoDepo", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Id_GrupoDepo() As Decimal
		Get
			Return Me._Id_GrupoDepo
		End Get
		Set
			If ((Me._Id_GrupoDepo = value)  _
						= false) Then
				Me.OnId_GrupoDepoChanging(value)
				Me.SendPropertyChanging
				Me._Id_GrupoDepo = value
				Me.SendPropertyChanged("Id_GrupoDepo")
				Me.OnId_GrupoDepoChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Corte_Turno", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Corte_Turno() As Decimal
		Get
			Return Me._Corte_Turno
		End Get
		Set
			If ((Me._Corte_Turno = value)  _
						= false) Then
				Me.OnCorte_TurnoChanging(value)
				Me.SendPropertyChanging
				Me._Corte_Turno = value
				Me.SendPropertyChanged("Corte_Turno")
				Me.OnCorte_TurnoChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Estacion_Genera", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Estacion_Genera() As String
		Get
			Return Me._Estacion_Genera
		End Get
		Set
			If (String.Equals(Me._Estacion_Genera, value) = false) Then
				Me.OnEstacion_GeneraChanging(value)
				Me.SendPropertyChanging
				Me._Estacion_Genera = value
				Me.SendPropertyChanged("Estacion_Genera")
				Me.OnEstacion_GeneraChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Estacion_Cancela", DbType:="VarChar(50)")>  _
	Public Property Estacion_Cancela() As String
		Get
			Return Me._Estacion_Cancela
		End Get
		Set
			If (String.Equals(Me._Estacion_Cancela, value) = false) Then
				Me.OnEstacion_CancelaChanging(value)
				Me.SendPropertyChanging
				Me._Estacion_Cancela = value
				Me.SendPropertyChanged("Estacion_Cancela")
				Me.OnEstacion_CancelaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_SesionGenera", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Id_SesionGenera() As Decimal
		Get
			Return Me._Id_SesionGenera
		End Get
		Set
			If ((Me._Id_SesionGenera = value)  _
						= false) Then
				Me.OnId_SesionGeneraChanging(value)
				Me.SendPropertyChanging
				Me._Id_SesionGenera = value
				Me.SendPropertyChanged("Id_SesionGenera")
				Me.OnId_SesionGeneraChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_SesionCancela", DbType:="Decimal(18,0)")>  _
	Public Property Id_SesionCancela() As System.Nullable(Of Decimal)
		Get
			Return Me._Id_SesionCancela
		End Get
		Set
			If (Me._Id_SesionCancela.Equals(value) = false) Then
				Me.OnId_SesionCancelaChanging(value)
				Me.SendPropertyChanging
				Me._Id_SesionCancela = value
				Me.SendPropertyChanged("Id_SesionCancela")
				Me.OnId_SesionCancelaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Status", DbType:="VarChar(1) NOT NULL")>  _
	Public Property Status() As Char
		Get
			Return Me._Status
		End Get
		Set
			If ((Me._Status = value)  _
						= false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_Sucursal", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Id_Sucursal() As Decimal
		Get
			Return Me._Id_Sucursal
		End Get
		Set
			If ((Me._Id_Sucursal = value)  _
						= false) Then
				Me.OnId_SucursalChanging(value)
				Me.SendPropertyChanging
				Me._Id_Sucursal = value
				Me.SendPropertyChanged("Id_Sucursal")
				Me.OnId_SucursalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Table(Name:="dbo.Pro_Fichas")>  _
Partial Public Class Pro_Fichas
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id_Ficha As Decimal
	
	Private _Id_Servicio As Decimal
	
	Private _Id_Cuenta As Decimal
	
	Private _Id_Moneda As Decimal
	
	Private _Numero_Ficha As Decimal
	
	Private _Tipo_Ficha As Char
	
	Private _Importe_Efectivo As Decimal
	
	Private _Importe_Cheques As Decimal
	
	Private _Importe_Otros As Decimal
	
	Private _Dif_Efectivo As Decimal
	
	Private _Dif_Cheques As Decimal
	
	Private _Dif_Otros As Decimal
	
	Private _Referencia As String
	
	Private _Id_Referencia As System.Nullable(Of Decimal)
	
	Private _Referencia2 As String
	
	Private _Fecha_Captura As Date
	
	Private _Estacion_Captura As String
	
	Private _Cheques_Propios As Decimal
	
	Private _Cheques_Otros As Decimal
	
	Private _Cheques_PropiosImp As Decimal
	
	Private _Cheques_OtrosImp As Decimal
	
	Private _Importe_Billetes As Decimal
	
	Private _Importe_Monedas As Decimal
	
	Private _Status As Char
	
	Private _Id_Archivo As System.Nullable(Of Decimal)
	
	Private _Pro_Servicios As EntitySet(Of Pro_Servicios)
	
	Private _Pro_Cuentas As EntitySet(Of Pro_Cuentas)
	
	Private _Cat_Monedas As EntitySet(Of Cat_Monedas)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnId_FichaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_FichaChanged()
    End Sub
    Partial Private Sub OnId_ServicioChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_ServicioChanged()
    End Sub
    Partial Private Sub OnId_CuentaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_CuentaChanged()
    End Sub
    Partial Private Sub OnId_MonedaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_MonedaChanged()
    End Sub
    Partial Private Sub OnNumero_FichaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnNumero_FichaChanged()
    End Sub
    Partial Private Sub OnTipo_FichaChanging(value As Char)
    End Sub
    Partial Private Sub OnTipo_FichaChanged()
    End Sub
    Partial Private Sub OnImporte_EfectivoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnImporte_EfectivoChanged()
    End Sub
    Partial Private Sub OnImporte_ChequesChanging(value As Decimal)
    End Sub
    Partial Private Sub OnImporte_ChequesChanged()
    End Sub
    Partial Private Sub OnImporte_OtrosChanging(value As Decimal)
    End Sub
    Partial Private Sub OnImporte_OtrosChanged()
    End Sub
    Partial Private Sub OnDif_EfectivoChanging(value As Decimal)
    End Sub
    Partial Private Sub OnDif_EfectivoChanged()
    End Sub
    Partial Private Sub OnDif_ChequesChanging(value As Decimal)
    End Sub
    Partial Private Sub OnDif_ChequesChanged()
    End Sub
    Partial Private Sub OnDif_OtrosChanging(value As Decimal)
    End Sub
    Partial Private Sub OnDif_OtrosChanged()
    End Sub
    Partial Private Sub OnReferenciaChanging(value As String)
    End Sub
    Partial Private Sub OnReferenciaChanged()
    End Sub
    Partial Private Sub OnId_ReferenciaChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnId_ReferenciaChanged()
    End Sub
    Partial Private Sub OnReferencia2Changing(value As String)
    End Sub
    Partial Private Sub OnReferencia2Changed()
    End Sub
    Partial Private Sub OnFecha_CapturaChanging(value As Date)
    End Sub
    Partial Private Sub OnFecha_CapturaChanged()
    End Sub
    Partial Private Sub OnEstacion_CapturaChanging(value As String)
    End Sub
    Partial Private Sub OnEstacion_CapturaChanged()
    End Sub
    Partial Private Sub OnCheques_PropiosChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCheques_PropiosChanged()
    End Sub
    Partial Private Sub OnCheques_OtrosChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCheques_OtrosChanged()
    End Sub
    Partial Private Sub OnCheques_PropiosImpChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCheques_PropiosImpChanged()
    End Sub
    Partial Private Sub OnCheques_OtrosImpChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCheques_OtrosImpChanged()
    End Sub
    Partial Private Sub OnImporte_BilletesChanging(value As Decimal)
    End Sub
    Partial Private Sub OnImporte_BilletesChanged()
    End Sub
    Partial Private Sub OnImporte_MonedasChanging(value As Decimal)
    End Sub
    Partial Private Sub OnImporte_MonedasChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As Char)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    Partial Private Sub OnId_ArchivoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnId_ArchivoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Pro_Servicios = New EntitySet(Of Pro_Servicios)(AddressOf Me.attach_Pro_Servicios, AddressOf Me.detach_Pro_Servicios)
		Me._Pro_Cuentas = New EntitySet(Of Pro_Cuentas)(AddressOf Me.attach_Pro_Cuentas, AddressOf Me.detach_Pro_Cuentas)
		Me._Cat_Monedas = New EntitySet(Of Cat_Monedas)(AddressOf Me.attach_Cat_Monedas, AddressOf Me.detach_Cat_Monedas)
		OnCreated
	End Sub
	
	<Column(Storage:="_Id_Ficha", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id_Ficha() As Decimal
		Get
			Return Me._Id_Ficha
		End Get
		Set
			If ((Me._Id_Ficha = value)  _
						= false) Then
				Me.OnId_FichaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Ficha = value
				Me.SendPropertyChanged("Id_Ficha")
				Me.OnId_FichaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_Servicio", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Id_Servicio() As Decimal
		Get
			Return Me._Id_Servicio
		End Get
		Set
			If ((Me._Id_Servicio = value)  _
						= false) Then
				Me.OnId_ServicioChanging(value)
				Me.SendPropertyChanging
				Me._Id_Servicio = value
				Me.SendPropertyChanged("Id_Servicio")
				Me.OnId_ServicioChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_Cuenta", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Id_Cuenta() As Decimal
		Get
			Return Me._Id_Cuenta
		End Get
		Set
			If ((Me._Id_Cuenta = value)  _
						= false) Then
				Me.OnId_CuentaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Cuenta = value
				Me.SendPropertyChanged("Id_Cuenta")
				Me.OnId_CuentaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_Moneda", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Id_Moneda() As Decimal
		Get
			Return Me._Id_Moneda
		End Get
		Set
			If ((Me._Id_Moneda = value)  _
						= false) Then
				Me.OnId_MonedaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Moneda = value
				Me.SendPropertyChanged("Id_Moneda")
				Me.OnId_MonedaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Numero_Ficha", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Numero_Ficha() As Decimal
		Get
			Return Me._Numero_Ficha
		End Get
		Set
			If ((Me._Numero_Ficha = value)  _
						= false) Then
				Me.OnNumero_FichaChanging(value)
				Me.SendPropertyChanging
				Me._Numero_Ficha = value
				Me.SendPropertyChanged("Numero_Ficha")
				Me.OnNumero_FichaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Tipo_Ficha", DbType:="VarChar(1) NOT NULL")>  _
	Public Property Tipo_Ficha() As Char
		Get
			Return Me._Tipo_Ficha
		End Get
		Set
			If ((Me._Tipo_Ficha = value)  _
						= false) Then
				Me.OnTipo_FichaChanging(value)
				Me.SendPropertyChanging
				Me._Tipo_Ficha = value
				Me.SendPropertyChanged("Tipo_Ficha")
				Me.OnTipo_FichaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Importe_Efectivo", DbType:="Money NOT NULL")>  _
	Public Property Importe_Efectivo() As Decimal
		Get
			Return Me._Importe_Efectivo
		End Get
		Set
			If ((Me._Importe_Efectivo = value)  _
						= false) Then
				Me.OnImporte_EfectivoChanging(value)
				Me.SendPropertyChanging
				Me._Importe_Efectivo = value
				Me.SendPropertyChanged("Importe_Efectivo")
				Me.OnImporte_EfectivoChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Importe_Cheques", DbType:="Money NOT NULL")>  _
	Public Property Importe_Cheques() As Decimal
		Get
			Return Me._Importe_Cheques
		End Get
		Set
			If ((Me._Importe_Cheques = value)  _
						= false) Then
				Me.OnImporte_ChequesChanging(value)
				Me.SendPropertyChanging
				Me._Importe_Cheques = value
				Me.SendPropertyChanged("Importe_Cheques")
				Me.OnImporte_ChequesChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Importe_Otros", DbType:="Money NOT NULL")>  _
	Public Property Importe_Otros() As Decimal
		Get
			Return Me._Importe_Otros
		End Get
		Set
			If ((Me._Importe_Otros = value)  _
						= false) Then
				Me.OnImporte_OtrosChanging(value)
				Me.SendPropertyChanging
				Me._Importe_Otros = value
				Me.SendPropertyChanged("Importe_Otros")
				Me.OnImporte_OtrosChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Dif_Efectivo", DbType:="Money NOT NULL")>  _
	Public Property Dif_Efectivo() As Decimal
		Get
			Return Me._Dif_Efectivo
		End Get
		Set
			If ((Me._Dif_Efectivo = value)  _
						= false) Then
				Me.OnDif_EfectivoChanging(value)
				Me.SendPropertyChanging
				Me._Dif_Efectivo = value
				Me.SendPropertyChanged("Dif_Efectivo")
				Me.OnDif_EfectivoChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Dif_Cheques", DbType:="Money NOT NULL")>  _
	Public Property Dif_Cheques() As Decimal
		Get
			Return Me._Dif_Cheques
		End Get
		Set
			If ((Me._Dif_Cheques = value)  _
						= false) Then
				Me.OnDif_ChequesChanging(value)
				Me.SendPropertyChanging
				Me._Dif_Cheques = value
				Me.SendPropertyChanged("Dif_Cheques")
				Me.OnDif_ChequesChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Dif_Otros", DbType:="Money NOT NULL")>  _
	Public Property Dif_Otros() As Decimal
		Get
			Return Me._Dif_Otros
		End Get
		Set
			If ((Me._Dif_Otros = value)  _
						= false) Then
				Me.OnDif_OtrosChanging(value)
				Me.SendPropertyChanging
				Me._Dif_Otros = value
				Me.SendPropertyChanged("Dif_Otros")
				Me.OnDif_OtrosChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Referencia", DbType:="VarChar(50)")>  _
	Public Property Referencia() As String
		Get
			Return Me._Referencia
		End Get
		Set
			If (String.Equals(Me._Referencia, value) = false) Then
				Me.OnReferenciaChanging(value)
				Me.SendPropertyChanging
				Me._Referencia = value
				Me.SendPropertyChanged("Referencia")
				Me.OnReferenciaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_Referencia", DbType:="Decimal(18,0)")>  _
	Public Property Id_Referencia() As System.Nullable(Of Decimal)
		Get
			Return Me._Id_Referencia
		End Get
		Set
			If (Me._Id_Referencia.Equals(value) = false) Then
				Me.OnId_ReferenciaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Referencia = value
				Me.SendPropertyChanged("Id_Referencia")
				Me.OnId_ReferenciaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Referencia2", DbType:="VarChar(50)")>  _
	Public Property Referencia2() As String
		Get
			Return Me._Referencia2
		End Get
		Set
			If (String.Equals(Me._Referencia2, value) = false) Then
				Me.OnReferencia2Changing(value)
				Me.SendPropertyChanging
				Me._Referencia2 = value
				Me.SendPropertyChanged("Referencia2")
				Me.OnReferencia2Changed
			End If
		End Set
	End Property
	
	<Column(Storage:="_Fecha_Captura", DbType:="DateTime NOT NULL")>  _
	Public Property Fecha_Captura() As Date
		Get
			Return Me._Fecha_Captura
		End Get
		Set
			If ((Me._Fecha_Captura = value)  _
						= false) Then
				Me.OnFecha_CapturaChanging(value)
				Me.SendPropertyChanging
				Me._Fecha_Captura = value
				Me.SendPropertyChanged("Fecha_Captura")
				Me.OnFecha_CapturaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Estacion_Captura", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Estacion_Captura() As String
		Get
			Return Me._Estacion_Captura
		End Get
		Set
			If (String.Equals(Me._Estacion_Captura, value) = false) Then
				Me.OnEstacion_CapturaChanging(value)
				Me.SendPropertyChanging
				Me._Estacion_Captura = value
				Me.SendPropertyChanged("Estacion_Captura")
				Me.OnEstacion_CapturaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Cheques_Propios", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Cheques_Propios() As Decimal
		Get
			Return Me._Cheques_Propios
		End Get
		Set
			If ((Me._Cheques_Propios = value)  _
						= false) Then
				Me.OnCheques_PropiosChanging(value)
				Me.SendPropertyChanging
				Me._Cheques_Propios = value
				Me.SendPropertyChanged("Cheques_Propios")
				Me.OnCheques_PropiosChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Cheques_Otros", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Cheques_Otros() As Decimal
		Get
			Return Me._Cheques_Otros
		End Get
		Set
			If ((Me._Cheques_Otros = value)  _
						= false) Then
				Me.OnCheques_OtrosChanging(value)
				Me.SendPropertyChanging
				Me._Cheques_Otros = value
				Me.SendPropertyChanged("Cheques_Otros")
				Me.OnCheques_OtrosChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Cheques_PropiosImp", DbType:="Money NOT NULL")>  _
	Public Property Cheques_PropiosImp() As Decimal
		Get
			Return Me._Cheques_PropiosImp
		End Get
		Set
			If ((Me._Cheques_PropiosImp = value)  _
						= false) Then
				Me.OnCheques_PropiosImpChanging(value)
				Me.SendPropertyChanging
				Me._Cheques_PropiosImp = value
				Me.SendPropertyChanged("Cheques_PropiosImp")
				Me.OnCheques_PropiosImpChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Cheques_OtrosImp", DbType:="Money NOT NULL")>  _
	Public Property Cheques_OtrosImp() As Decimal
		Get
			Return Me._Cheques_OtrosImp
		End Get
		Set
			If ((Me._Cheques_OtrosImp = value)  _
						= false) Then
				Me.OnCheques_OtrosImpChanging(value)
				Me.SendPropertyChanging
				Me._Cheques_OtrosImp = value
				Me.SendPropertyChanged("Cheques_OtrosImp")
				Me.OnCheques_OtrosImpChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Importe_Billetes", DbType:="Money NOT NULL")>  _
	Public Property Importe_Billetes() As Decimal
		Get
			Return Me._Importe_Billetes
		End Get
		Set
			If ((Me._Importe_Billetes = value)  _
						= false) Then
				Me.OnImporte_BilletesChanging(value)
				Me.SendPropertyChanging
				Me._Importe_Billetes = value
				Me.SendPropertyChanged("Importe_Billetes")
				Me.OnImporte_BilletesChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Importe_Monedas", DbType:="Money NOT NULL")>  _
	Public Property Importe_Monedas() As Decimal
		Get
			Return Me._Importe_Monedas
		End Get
		Set
			If ((Me._Importe_Monedas = value)  _
						= false) Then
				Me.OnImporte_MonedasChanging(value)
				Me.SendPropertyChanging
				Me._Importe_Monedas = value
				Me.SendPropertyChanged("Importe_Monedas")
				Me.OnImporte_MonedasChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Status", DbType:="VarChar(1) NOT NULL")>  _
	Public Property Status() As Char
		Get
			Return Me._Status
		End Get
		Set
			If ((Me._Status = value)  _
						= false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_Archivo", DbType:="Decimal(18,0)")>  _
	Public Property Id_Archivo() As System.Nullable(Of Decimal)
		Get
			Return Me._Id_Archivo
		End Get
		Set
			If (Me._Id_Archivo.Equals(value) = false) Then
				Me.OnId_ArchivoChanging(value)
				Me.SendPropertyChanging
				Me._Id_Archivo = value
				Me.SendPropertyChanged("Id_Archivo")
				Me.OnId_ArchivoChanged
			End If
		End Set
	End Property
	
	<Association(Name:="Pro_Fichas_Pro_Servicios", Storage:="_Pro_Servicios", ThisKey:="Id_Servicio", OtherKey:="Id_Servicio")>  _
	Public Property Pro_Servicios() As EntitySet(Of Pro_Servicios)
		Get
			Return Me._Pro_Servicios
		End Get
		Set
			Me._Pro_Servicios.Assign(value)
		End Set
	End Property
	
	<Association(Name:="Pro_Fichas_Pro_Cuentas", Storage:="_Pro_Cuentas", ThisKey:="Id_Cuenta", OtherKey:="Id_Cuenta")>  _
	Public Property Pro_Cuentas() As EntitySet(Of Pro_Cuentas)
		Get
			Return Me._Pro_Cuentas
		End Get
		Set
			Me._Pro_Cuentas.Assign(value)
		End Set
	End Property
	
	<Association(Name:="Pro_Fichas_Cat_Monedas", Storage:="_Cat_Monedas", ThisKey:="Id_Moneda", OtherKey:="Id_Moneda")>  _
	Public Property Cat_Monedas() As EntitySet(Of Cat_Monedas)
		Get
			Return Me._Cat_Monedas
		End Get
		Set
			Me._Cat_Monedas.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Pro_Servicios(ByVal entity As Pro_Servicios)
		Me.SendPropertyChanging
		entity.Pro_Fichas = Me
	End Sub
	
	Private Sub detach_Pro_Servicios(ByVal entity As Pro_Servicios)
		Me.SendPropertyChanging
		entity.Pro_Fichas = Nothing
	End Sub
	
	Private Sub attach_Pro_Cuentas(ByVal entity As Pro_Cuentas)
		Me.SendPropertyChanging
		entity.Pro_Fichas = Me
	End Sub
	
	Private Sub detach_Pro_Cuentas(ByVal entity As Pro_Cuentas)
		Me.SendPropertyChanging
		entity.Pro_Fichas = Nothing
	End Sub
	
	Private Sub attach_Cat_Monedas(ByVal entity As Cat_Monedas)
		Me.SendPropertyChanging
		entity.Pro_Fichas = Me
	End Sub
	
	Private Sub detach_Cat_Monedas(ByVal entity As Cat_Monedas)
		Me.SendPropertyChanging
		entity.Pro_Fichas = Nothing
	End Sub
End Class

<Table(Name:="dbo.Cat_Monedas")>  _
Partial Public Class Cat_Monedas
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id_Moneda As Decimal
	
	Private _Clave_Moneda As String
	
	Private _Nombre As String
	
	Private _Fecha_Registro As Date
	
	Private _Usuario_Registro As Decimal
	
	Private _Status As Char
	
	Private _Cat_Denominaciones As EntitySet(Of Cat_Denominaciones)
	
	Private _Pro_Fichas As EntityRef(Of Pro_Fichas)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnId_MonedaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_MonedaChanged()
    End Sub
    Partial Private Sub OnClave_MonedaChanging(value As String)
    End Sub
    Partial Private Sub OnClave_MonedaChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnFecha_RegistroChanging(value As Date)
    End Sub
    Partial Private Sub OnFecha_RegistroChanged()
    End Sub
    Partial Private Sub OnUsuario_RegistroChanging(value As Decimal)
    End Sub
    Partial Private Sub OnUsuario_RegistroChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As Char)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Cat_Denominaciones = New EntitySet(Of Cat_Denominaciones)(AddressOf Me.attach_Cat_Denominaciones, AddressOf Me.detach_Cat_Denominaciones)
		Me._Pro_Fichas = CType(Nothing, EntityRef(Of Pro_Fichas))
		OnCreated
	End Sub
	
	<Column(Storage:="_Id_Moneda", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id_Moneda() As Decimal
		Get
			Return Me._Id_Moneda
		End Get
		Set
			If ((Me._Id_Moneda = value)  _
						= false) Then
				If Me._Pro_Fichas.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException
				End If
				Me.OnId_MonedaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Moneda = value
				Me.SendPropertyChanged("Id_Moneda")
				Me.OnId_MonedaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Clave_Moneda", DbType:="VarChar(4) NOT NULL", CanBeNull:=false)>  _
	Public Property Clave_Moneda() As String
		Get
			Return Me._Clave_Moneda
		End Get
		Set
			If (String.Equals(Me._Clave_Moneda, value) = false) Then
				Me.OnClave_MonedaChanging(value)
				Me.SendPropertyChanging
				Me._Clave_Moneda = value
				Me.SendPropertyChanged("Clave_Moneda")
				Me.OnClave_MonedaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Nombre", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Fecha_Registro", DbType:="DateTime NOT NULL")>  _
	Public Property Fecha_Registro() As Date
		Get
			Return Me._Fecha_Registro
		End Get
		Set
			If ((Me._Fecha_Registro = value)  _
						= false) Then
				Me.OnFecha_RegistroChanging(value)
				Me.SendPropertyChanging
				Me._Fecha_Registro = value
				Me.SendPropertyChanged("Fecha_Registro")
				Me.OnFecha_RegistroChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Usuario_Registro", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Usuario_Registro() As Decimal
		Get
			Return Me._Usuario_Registro
		End Get
		Set
			If ((Me._Usuario_Registro = value)  _
						= false) Then
				Me.OnUsuario_RegistroChanging(value)
				Me.SendPropertyChanging
				Me._Usuario_Registro = value
				Me.SendPropertyChanged("Usuario_Registro")
				Me.OnUsuario_RegistroChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Status", DbType:="VarChar(1) NOT NULL")>  _
	Public Property Status() As Char
		Get
			Return Me._Status
		End Get
		Set
			If ((Me._Status = value)  _
						= false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Association(Name:="Cat_Monedas_Cat_Denominaciones", Storage:="_Cat_Denominaciones", ThisKey:="Id_Moneda", OtherKey:="Id_Moneda")>  _
	Public Property Cat_Denominaciones() As EntitySet(Of Cat_Denominaciones)
		Get
			Return Me._Cat_Denominaciones
		End Get
		Set
			Me._Cat_Denominaciones.Assign(value)
		End Set
	End Property
	
	<Association(Name:="Pro_Fichas_Cat_Monedas", Storage:="_Pro_Fichas", ThisKey:="Id_Moneda", OtherKey:="Id_Moneda", IsForeignKey:=true)>  _
	Public Property Pro_Fichas() As Pro_Fichas
		Get
			Return Me._Pro_Fichas.Entity
		End Get
		Set
			Dim previousValue As Pro_Fichas = Me._Pro_Fichas.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Pro_Fichas.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Pro_Fichas.Entity = Nothing
					previousValue.Cat_Monedas.Remove(Me)
				End If
				Me._Pro_Fichas.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Cat_Monedas.Add(Me)
					Me._Id_Moneda = value.Id_Moneda
				Else
					Me._Id_Moneda = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("Pro_Fichas")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Cat_Denominaciones(ByVal entity As Cat_Denominaciones)
		Me.SendPropertyChanging
		entity.Cat_Monedas = Me
	End Sub
	
	Private Sub detach_Cat_Denominaciones(ByVal entity As Cat_Denominaciones)
		Me.SendPropertyChanging
		entity.Cat_Monedas = Nothing
	End Sub
End Class

<Table(Name:="dbo.Cat_Denominaciones")>  _
Partial Public Class Cat_Denominaciones
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id_Denominacion As Decimal
	
	Private _Id_Moneda As Decimal
	
	Private _Presentacion As Char
	
	Private _Denominacion As Decimal
	
	Private _CantidadXBolsa As Decimal
	
	Private _CantidadXBolsaB As Decimal
	
	Private _Status As Char
	
	Private _Cat_Monedas As EntityRef(Of Cat_Monedas)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnId_DenominacionChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_DenominacionChanged()
    End Sub
    Partial Private Sub OnId_MonedaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnId_MonedaChanged()
    End Sub
    Partial Private Sub OnPresentacionChanging(value As Char)
    End Sub
    Partial Private Sub OnPresentacionChanged()
    End Sub
    Partial Private Sub OnDenominacionChanging(value As Decimal)
    End Sub
    Partial Private Sub OnDenominacionChanged()
    End Sub
    Partial Private Sub OnCantidadXBolsaChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCantidadXBolsaChanged()
    End Sub
    Partial Private Sub OnCantidadXBolsaBChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCantidadXBolsaBChanged()
    End Sub
    Partial Private Sub OnStatusChanging(value As Char)
    End Sub
    Partial Private Sub OnStatusChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Cat_Monedas = CType(Nothing, EntityRef(Of Cat_Monedas))
		OnCreated
	End Sub
	
	<Column(Storage:="_Id_Denominacion", AutoSync:=AutoSync.OnInsert, DbType:="Decimal(18,0) NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id_Denominacion() As Decimal
		Get
			Return Me._Id_Denominacion
		End Get
		Set
			If ((Me._Id_Denominacion = value)  _
						= false) Then
				Me.OnId_DenominacionChanging(value)
				Me.SendPropertyChanging
				Me._Id_Denominacion = value
				Me.SendPropertyChanged("Id_Denominacion")
				Me.OnId_DenominacionChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Id_Moneda", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property Id_Moneda() As Decimal
		Get
			Return Me._Id_Moneda
		End Get
		Set
			If ((Me._Id_Moneda = value)  _
						= false) Then
				If Me._Cat_Monedas.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException
				End If
				Me.OnId_MonedaChanging(value)
				Me.SendPropertyChanging
				Me._Id_Moneda = value
				Me.SendPropertyChanged("Id_Moneda")
				Me.OnId_MonedaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Presentacion", DbType:="VarChar(1) NOT NULL")>  _
	Public Property Presentacion() As Char
		Get
			Return Me._Presentacion
		End Get
		Set
			If ((Me._Presentacion = value)  _
						= false) Then
				Me.OnPresentacionChanging(value)
				Me.SendPropertyChanging
				Me._Presentacion = value
				Me.SendPropertyChanged("Presentacion")
				Me.OnPresentacionChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Denominacion", DbType:="Money NOT NULL")>  _
	Public Property Denominacion() As Decimal
		Get
			Return Me._Denominacion
		End Get
		Set
			If ((Me._Denominacion = value)  _
						= false) Then
				Me.OnDenominacionChanging(value)
				Me.SendPropertyChanging
				Me._Denominacion = value
				Me.SendPropertyChanged("Denominacion")
				Me.OnDenominacionChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_CantidadXBolsa", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property CantidadXBolsa() As Decimal
		Get
			Return Me._CantidadXBolsa
		End Get
		Set
			If ((Me._CantidadXBolsa = value)  _
						= false) Then
				Me.OnCantidadXBolsaChanging(value)
				Me.SendPropertyChanging
				Me._CantidadXBolsa = value
				Me.SendPropertyChanged("CantidadXBolsa")
				Me.OnCantidadXBolsaChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_CantidadXBolsaB", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property CantidadXBolsaB() As Decimal
		Get
			Return Me._CantidadXBolsaB
		End Get
		Set
			If ((Me._CantidadXBolsaB = value)  _
						= false) Then
				Me.OnCantidadXBolsaBChanging(value)
				Me.SendPropertyChanging
				Me._CantidadXBolsaB = value
				Me.SendPropertyChanged("CantidadXBolsaB")
				Me.OnCantidadXBolsaBChanged
			End If
		End Set
	End Property
	
	<Column(Storage:="_Status", DbType:="VarChar(1) NOT NULL")>  _
	Public Property Status() As Char
		Get
			Return Me._Status
		End Get
		Set
			If ((Me._Status = value)  _
						= false) Then
				Me.OnStatusChanging(value)
				Me.SendPropertyChanging
				Me._Status = value
				Me.SendPropertyChanged("Status")
				Me.OnStatusChanged
			End If
		End Set
	End Property
	
	<Association(Name:="Cat_Monedas_Cat_Denominaciones", Storage:="_Cat_Monedas", ThisKey:="Id_Moneda", OtherKey:="Id_Moneda", IsForeignKey:=true)>  _
	Public Property Cat_Monedas() As Cat_Monedas
		Get
			Return Me._Cat_Monedas.Entity
		End Get
		Set
			Dim previousValue As Cat_Monedas = Me._Cat_Monedas.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Cat_Monedas.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Cat_Monedas.Entity = Nothing
					previousValue.Cat_Denominaciones.Remove(Me)
				End If
				Me._Cat_Monedas.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Cat_Denominaciones.Add(Me)
					Me._Id_Moneda = value.Id_Moneda
				Else
					Me._Id_Moneda = CType(Nothing, Decimal)
				End If
				Me.SendPropertyChanged("Cat_Monedas")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

Partial Public Class CAT_Remisiones_CreateResult
	
	Private _Column1 As System.Nullable(Of Decimal)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Column(Storage:="_Column1", DbType:="Decimal(0,0)")>  _
	Public Property Column1() As System.Nullable(Of Decimal)
		Get
			Return Me._Column1
		End Get
		Set
			If (Me._Column1.Equals(value) = false) Then
				Me._Column1 = value
			End If
		End Set
	End Property
End Class
